<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebApiDemo</name>
    </assembly>
    <members>
        <member name="P:WebApiDemo.Config.Version">
            <summary>
            服务版本
            </summary>
        </member>
        <member name="P:WebApiDemo.Config.VersionTime">
            <summary>
            服务发布时间
            </summary>
        </member>
        <member name="P:WebApiDemo.Config.WebTitle">
            <summary>
            服务主题
            </summary>
        </member>
        <member name="P:WebApiDemo.Config.SubSystemName">
            <summary>
            跨越访问
            </summary>
        </member>
        <member name="P:WebApiDemo.Config.SwaggerUrl">
            <summary>
            访问url 默认未空字符串 全部请求可以访问
            </summary>
        </member>
        <member name="T:WebApiDemo.Controllers.WeatherForecastController">
            <summary>
            测试测试测试
            </summary>
        </member>
        <member name="M:WebApiDemo.Controllers.WeatherForecastController.#ctor(Microsoft.Extensions.Logging.ILogger{WebApiDemo.Controllers.WeatherForecastController})">
            <summary>
            初始化
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:WebApiDemo.Controllers.WeatherForecastController.Get">
            <summary>
            xxxxxx
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebApiDemo.Controllers.WeatherForecastController.Post(Microsoft.AspNetCore.Http.IFormCollection,System.String)">
            <summary>
            表单提交文件
            </summary>
            <param name="FaceImage">人脸图片</param>
            <param name="FaceDataRecord">人脸数据</param>
            <returns></returns>
        </member>
        <member name="M:WebApiDemo.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            初始化对象，传入对应接口参数：
            IHostingEnvironment 提供环境信息的 service
            IConfiguration 提供读取config.表示一组键/值应用程序配置属性
            ILoggerFactory 创建log对象.
            IApplicationBuilder：是一个包含与当前环境相关的属性和方法的接口。它用于获取应用程序中的环境变量。
            </summary>
            <param name="configuration">提供读取config.</param>
        </member>
        <member name="M:WebApiDemo.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            在运行的时候被调用, 然后向IOC的容器中注入service
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:WebApiDemo.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            通过Autofac扩展服务注册功能，在ConfigureServices之后执行
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
