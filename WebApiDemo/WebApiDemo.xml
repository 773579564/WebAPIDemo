<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebApiDemo</name>
    </assembly>
    <members>
        <member name="T:WebApiDemo.Cache.RedisCacheSetup">
            <summary>
            Redis缓存 启动服务
            </summary>
        </member>
        <member name="F:WebApiDemo.Cache.RedisConstant.MAIN_KEY">
            <summary>
            程序保存redis前缀
            </summary>
        </member>
        <member name="F:WebApiDemo.Cache.RedisConstant.LIMIT_LOGIN_ACCOUNT_KEY">
            <summary>
            登录失败的账号次数
            </summary>
        </member>
        <member name="F:WebApiDemo.Cache.RedisConstant.LAST_SYNC_CDUI_TIME">
            <summary>
            定时任务中上次同步时间
            </summary>
        </member>
        <member name="T:WebApiDemo.Controllers.WeatherForecastController">
            <summary>
            测试测试测试
            </summary>
        </member>
        <member name="M:WebApiDemo.Controllers.WeatherForecastController.#ctor(Microsoft.Extensions.Logging.ILogger{WebApiDemo.Controllers.WeatherForecastController})">
            <summary>
            初始化
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:WebApiDemo.Controllers.WeatherForecastController.Get">
            <summary>
            xxxxxx
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebApiDemo.Controllers.WeatherForecastController.Post(Microsoft.AspNetCore.Http.IFormFile,System.String)">
            <summary>
            表单提交文件
            </summary>
            <param name="itemfile">人脸图片</param>
            <param name="FaceDataRecord">人脸数据</param>
            <returns></returns>
        </member>
        <member name="T:WebApiDemo.Filter.GlobalExceptionsFilter">
            <summary>
            全局异常错误日志
            </summary>
        </member>
        <member name="M:WebApiDemo.Filter.GlobalExceptionsFilter.WriteLog(System.String,System.Exception)">
            <summary>
            自定义返回格式
            </summary>
            <param name="throwMsg"></param>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:WebApiDemo.Helper.JsonHelper.ObjToJson(System.Object)">
            <summary>
            对象序列化
            </summary>
            <param name="obj">对象</param>
            <param name="isUseTextJson">是否使用textjson</param>
            <returns>返回json字符串</returns>
        </member>
        <member name="M:WebApiDemo.Helper.JsonHelper.JsonToObj``1(System.String)">
            <summary>
            json反序列化obj
            </summary>
            <typeparam name="T">反序列类型</typeparam>
            <param name="strJson">json</param>
            <param name="isUseTextJson">是否使用textjson</param>
            <returns>返回对象</returns>
        </member>
        <member name="M:WebApiDemo.Helper.JsonHelper.GetJSON``1(System.Object)">
            <summary>
            转换对象为JSON格式数据
            </summary>
            <typeparam name="T">类</typeparam>
            <param name="obj">对象</param>
            <returns>字符格式的JSON数据</returns>
        </member>
        <member name="M:WebApiDemo.Helper.SerializeHelper.Serialize(System.Object)">
            <summary>
            序列化
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:WebApiDemo.Helper.SerializeHelper.Deserialize``1(System.Byte[])">
            <summary>
            反序列化
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
    </members>
</doc>
